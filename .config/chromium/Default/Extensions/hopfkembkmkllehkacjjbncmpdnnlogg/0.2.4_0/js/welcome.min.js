"use strict";function setFileName(o){var e=/(\d{4}-\d{2}-\d{2})T(\d{2}\:\d{2}\:\d{2})/,n=o.start.match(e),t=o.end.match(e),i=n[2].replace(/\:/g,"-"),a=t[2].replace(/\:/g,"-");return"Rec-"+n[1]+"-From-"+i+"-To-"+a+".wav"}function gotBuffers(o){audioRecorder.exportMonoWAV(doneEncoding)}function doneEncoding(o){console.log("ok!")}function convertToMono(o){var e=audioContext.createChannelSplitter(2),n=audioContext.createChannelMerger(2);return o.connect(e),e.connect(n,0,0),e.connect(n,0,1),n}function toggleMono(){audioInput!=realAudioInput?(audioInput.disconnect(),realAudioInput.disconnect(),audioInput=realAudioInput):(realAudioInput.disconnect(),audioInput=convertToMono(realAudioInput)),audioInput.connect(inputPoint)}function gotStream(o){inputPoint=audioContext.createGain(),realAudioInput=audioContext.createMediaStreamSource(o),audioInput=realAudioInput,audioInput.connect(inputPoint),analyserNode=audioContext.createAnalyser(),analyserNode.fftSize=2048,inputPoint.connect(analyserNode),audioRecorder=new Recorder(inputPoint),zeroGain=audioContext.createGain(),zeroGain.gain.value=0,inputPoint.connect(zeroGain),zeroGain.connect(audioContext.destination)}function initAudio(){navigator.getUserMedia||(navigator.getUserMedia=navigator.webkitGetUserMedia),navigator.getUserMedia({audio:{mandatory:{googEchoCancellation:"false",googAutoGainControl:"false",googNoiseSuppression:"false",googHighpassFilter:"false"},optional:[]}},gotStream,function(o){reloader.style.display="none",errInfo.style.display="block",console.log(o)})}window.AudioContext=window.AudioContext||window.webkitAudioContext;var reloader=document.getElementById("reloader"),errInfo=document.getElementById("errInfo"),audioContext=new AudioContext,audioInput,realAudioInput,inputPoint,audioRecorder,analyserNode,zeroGain,filename;window.addEventListener("load",initAudio),reloader.addEventListener("click",function(){chrome.runtime.reload()});
!function(t){var e="js/worker.min.js",o=function(t,o){var n=o||{},a=n.bufferLen||4096;this.context=t.context,this.node=this.context.createScriptProcessor?this.context.createScriptProcessor(a,2,2):this.context.createJavaScriptNode(a,2,2);var s=new Worker(n.workerPath||e);s.postMessage({command:"init",config:{sampleRate:this.context.sampleRate}});var r,c=!1;this.node.onaudioprocess=function(t){c&&s.postMessage({command:"record",buffer:[t.inputBuffer.getChannelData(0),t.inputBuffer.getChannelData(1)]})},this.configure=function(t){for(var e in t)t.hasOwnProperty(e)&&(n[e]=t[e])},this.record=function(){c=!0},this.stop=function(){c=!1},this.clear=function(){s.postMessage({command:"clear"})},this.getBuffers=function(t){r=t||n.callback,s.postMessage({command:"getBuffers"})},this.exportWAV=function(t,e){if(r=t||n.callback,e=e||n.type||"audio/wav",!r)throw new Error("Callback not set");s.postMessage({command:"exportWAV",type:e})},this.exportMonoWAV=function(t,e){if(r=t||n.callback,e=e||n.type||"audio/wav",!r)throw new Error("Callback not set");s.postMessage({command:"exportMonoWAV",type:e})},s.onmessage=function(t){var e=t.data;r(e)},t.connect(this.node),this.node.connect(this.context.destination)};t.Recorder=o}(window);